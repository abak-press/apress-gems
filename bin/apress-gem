#!/usr/bin/env ruby

require 'optparse'
require 'apress/gems/cli'

options = {}

opt_parser = OptionParser.new do |opt|
  opt.banner = 'Usage: apress-gem COMMAND [OPTIONS]'
  opt.separator ''
  opt.separator 'Abak-Press Gem Releasing Tool'
  opt.separator ''
  opt.separator 'Commands'
  opt.separator '    release: changelog, version, tag, build and upload'
  opt.separator '    changelog: generate CHANGELOG.md'
  opt.separator '    bump: update const VERSION in lin/**/version.rb'
  opt.separator '    build: make gem package'
  opt.separator '    upload: upload package to gems.railsc.ru'
  opt.separator '    current: show current gem version'
  opt.separator '    exist: check for uploaded gem'
  opt.separator ''

  opt.separator 'Options'

  opt.on('-h', '--help', 'help') do
    options[:show_help] = true
  end

  opt.on('-v', '--version VERSION', 'new version, ex: -v 1.0.0') do |value|
    options[:version] = value
  end

  opt.on('-b', '--branch BRANCH', 'branch, default master') do |value|
    options[:branch] = value
  end

  opt.on('-r', '--remote NAME', 'remote server name, default origin') do |value|
    options[:remote] = value
  end

  opt.on('-B', '--no-bump', 'no update version in version.rb') do
    options[:bump] = false
  end

  opt.on('-L', '--no-changelog', 'no generate changelog') do
    options[:changelog] = false
  end

  opt.on('-P', '--no-push', 'no push to remote repo') do
    options[:push] = false
  end

  opt.on('-U', '--no-pull', 'no pull latest changes') do
    options[:pull] = false
  end

  opt.on('-q', '--quiet', 'silence command progress meter') do
    options[:quiet] = true
  end

  opt.on('-s', '--source URL', 'url of gem source, default https://gems.railsc.ru/') do |value|
    options[:source] = value
  end

  opt.on('-p', '--public', 'gem is public from rubygems.org') do |value|
    options[:public] = true
  end
end

opt_parser.parse!

if options[:show_help]
  puts opt_parser
  exit
end

subcmd = ARGV[0]
if %w(release changelog build upload tag current bump exist).include?(subcmd)
  Apress::Gems::Cli.new(options).public_send(subcmd)
else
  puts opt_parser
end
